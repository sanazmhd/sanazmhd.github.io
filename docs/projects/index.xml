<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Projects on Sanaz‚Äôs Blog</title><link>https://sanazmhd.github.io/projects/</link><description>Recent content in Projects on Sanaz‚Äôs Blog</description><generator>Hugo -- 0.150.0</generator><language>en</language><lastBuildDate>Mon, 14 Apr 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://sanazmhd.github.io/projects/index.xml" rel="self" type="application/rss+xml"/><item><title>üõ†Ô∏èBuilding a Dockerized Flask + React App</title><link>https://sanazmhd.github.io/projects/building-a-dockerized-flask-+-react-app/</link><pubDate>Mon, 14 Apr 2025 00:00:00 +0000</pubDate><guid>https://sanazmhd.github.io/projects/building-a-dockerized-flask-+-react-app/</guid><description>&lt;p&gt;üìå Project Goal&lt;/p&gt;
&lt;p&gt;In this project, I set out to build a simple full-stack web application using:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Flask (Python) as the backend API
React as the frontend
Docker to containerize and run the whole app
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The goal was to serve the React frontend using Flask and make API calls from React to Flask‚Äîall within a Docker container.
üß± Tech Stack&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Frontend: React
Backend: Flask + Flask-CORS
Containerization: Docker
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;üåê What the App Does&lt;/p&gt;</description></item><item><title>üõ†Ô∏èFlask Project</title><link>https://sanazmhd.github.io/projects/simple-flask-project/</link><pubDate>Mon, 14 Apr 2025 00:00:00 +0000</pubDate><guid>https://sanazmhd.github.io/projects/simple-flask-project/</guid><description>&lt;p&gt;Getting Started with Flask: A Super Simple Guide for Beginners&lt;/p&gt;
&lt;p&gt;If you&amp;rsquo;re new to Python web development, Flask is the perfect place to start! It&amp;rsquo;s lightweight, beginner-friendly, and lets you build web apps quickly.&lt;/p&gt;
&lt;p&gt;Let‚Äôs walk through a very simple Flask project, explain every line in detail:&lt;/p&gt;
&lt;p&gt;üîß What is Flask?&lt;/p&gt;
&lt;p&gt;Flask is a small Python framework used to build websites and web applications.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Lightweight and easy to use
Fast to build and test
Great for learning web development
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;üõ†Ô∏è The Simplest Flask App (Hello World)&lt;/p&gt;</description></item><item><title>DHCP Tutorial: Understanding and Configuring DHCP</title><link>https://sanazmhd.github.io/projects/dhcp-tutorial/</link><pubDate>Sun, 14 Apr 2024 00:00:00 +0000</pubDate><guid>https://sanazmhd.github.io/projects/dhcp-tutorial/</guid><description>&lt;h2 id="introduction"&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Dynamic Host Configuration Protocol (DHCP) is a network management protocol that automates the assignment of IP addresses and other network configuration parameters to devices, allowing them to communicate on an IP network.&lt;/p&gt;
&lt;p&gt;In this tutorial, we&amp;rsquo;ll cover:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;What DHCP is&lt;/li&gt;
&lt;li&gt;Key concepts&lt;/li&gt;
&lt;li&gt;A hands-on example&lt;/li&gt;
&lt;li&gt;Best practices&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id="1-what-is-dhcp"&gt;1. What is DHCP?&lt;/h2&gt;
&lt;p&gt;DHCP (Dynamic Host Configuration Protocol) allows automatic assignment of IP addresses to devices.&lt;br&gt;
&lt;strong&gt;Benefits:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Reduces manual IP configuration&lt;/li&gt;
&lt;li&gt;Enables IP address reusability&lt;/li&gt;
&lt;li&gt;Simplifies network administration&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id="2-key-terminology"&gt;2. Key Terminology&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;DHCP Server:&lt;/strong&gt; Provides IP addresses.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DHCP Client:&lt;/strong&gt; Requests IP addresses.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Scope:&lt;/strong&gt; Range of IP addresses available for assignment.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Lease Time:&lt;/strong&gt; Time period a device can use an IP address.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Options:&lt;/strong&gt; Additional information like DNS and Default Gateway.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id="3-dhcp-process"&gt;3. DHCP Process&lt;/h2&gt;
&lt;p&gt;Here is the basic process:&lt;/p&gt;</description></item><item><title>DHCP Tutorial: Understanding and Configuring DHCP</title><link>https://sanazmhd.github.io/projects/dhcp/</link><pubDate>Sun, 14 Apr 2024 00:00:00 +0000</pubDate><guid>https://sanazmhd.github.io/projects/dhcp/</guid><description>&lt;h2 id="introduction"&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Dynamic Host Configuration Protocol (DHCP) is a network management protocol that automates the assignment of IP addresses and other network configuration parameters to devices, allowing them to communicate on an IP network.&lt;/p&gt;
&lt;p&gt;In this tutorial, we&amp;rsquo;ll cover:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;What DHCP is&lt;/li&gt;
&lt;li&gt;Key concepts&lt;/li&gt;
&lt;li&gt;A hands-on example&lt;/li&gt;
&lt;li&gt;Best practices&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id="1-what-is-dhcp"&gt;1. What is DHCP?&lt;/h2&gt;
&lt;p&gt;DHCP (Dynamic Host Configuration Protocol) allows automatic assignment of IP addresses to devices.&lt;br&gt;
&lt;strong&gt;Benefits:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Reduces manual IP configuration&lt;/li&gt;
&lt;li&gt;Enables IP address reusability&lt;/li&gt;
&lt;li&gt;Simplifies network administration&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id="2-key-terminology"&gt;2. Key Terminology&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;DHCP Server:&lt;/strong&gt; Provides IP addresses.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DHCP Client:&lt;/strong&gt; Requests IP addresses.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Scope:&lt;/strong&gt; Range of IP addresses available for assignment.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Lease Time:&lt;/strong&gt; Time period a device can use an IP address.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Options:&lt;/strong&gt; Additional information like DNS and Default Gateway.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id="3-dhcp-process"&gt;3. DHCP Process&lt;/h2&gt;
&lt;p&gt;Here is the basic process:&lt;/p&gt;</description></item><item><title>Setting Up an FTP Server: What, Why, and How?(Linux/Windows)</title><link>https://sanazmhd.github.io/projects/ftp-server/</link><pubDate>Sun, 14 Apr 2024 00:00:00 +0000</pubDate><guid>https://sanazmhd.github.io/projects/ftp-server/</guid><description>&lt;p&gt;ü§î What is an FTP Server?&lt;/p&gt;
&lt;p&gt;An FTP (File Transfer Protocol) server is a service that allows you to upload and download files. You might think:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;‚ÄúIsn‚Äôt this a basic thing?‚Äù
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Yes, it seems simple, but it has powerful features:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;You can upload large numbers of files efficiently.
Multiple users can connect simultaneously and transfer files.
Both uploading and downloading are supported.
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;p&gt;Where is FTP Used?&lt;/p&gt;
&lt;p&gt;FTP servers are widely used in:&lt;/p&gt;</description></item></channel></rss>